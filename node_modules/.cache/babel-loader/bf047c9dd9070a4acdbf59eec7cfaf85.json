{"ast":null,"code":"var _jsxFileName = \"/Users/priscilla/ReactProject/react-udemy/crwn-clothing/clwn-clothing/src/components/button/button.component.jsx\";\nimport { BaseButton, GoogleSignInButton, InvertedButton } from './button.styles';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const BUTTON_TYPE_CLASSES = {\n  base: \"base\",\n  google: \"google-sign-in\",\n  inverted: \"inverted\"\n};\n\nconst getButton = function () {\n  let buttonType = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : BUTTON_TYPE_CLASSES.base;\n  return {\n    [BUTTON_TYPE_CLASSES.base]: BaseButton,\n    [BUTTON_TYPE_CLASSES.google]: GoogleSignInButton,\n    [BUTTON_TYPE_CLASSES.inverted]: InvertedButton\n  }[buttonType];\n};\n\nconst Button = _ref => {\n  let {\n    children,\n    buttonType,\n    ...otherProps\n  } = _ref;\n  const customButton = getButton(buttonType);\n  return /*#__PURE__*/_jsxDEV(\"customButton\", { ...otherProps,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 9\n  }, this);\n};\n\n_c = Button;\nexport default Button;\n\nvar _c;\n\n$RefreshReg$(_c, \"Button\");","map":{"version":3,"names":["BaseButton","GoogleSignInButton","InvertedButton","BUTTON_TYPE_CLASSES","base","google","inverted","getButton","buttonType","Button","children","otherProps","customButton"],"sources":["/Users/priscilla/ReactProject/react-udemy/crwn-clothing/clwn-clothing/src/components/button/button.component.jsx"],"sourcesContent":["import {BaseButton, GoogleSignInButton, InvertedButton} from './button.styles';\n\nexport const BUTTON_TYPE_CLASSES = {\n    base: \"base\",\n    google: \"google-sign-in\",\n    inverted:\"inverted\"\n}\n\nconst getButton = (buttonType = BUTTON_TYPE_CLASSES.base) =>(\n    {\n        [BUTTON_TYPE_CLASSES.base]:BaseButton,\n        [BUTTON_TYPE_CLASSES.google]:GoogleSignInButton,\n        [BUTTON_TYPE_CLASSES.inverted]:InvertedButton\n    }[buttonType]\n);\n\nconst Button = ({children, buttonType, ...otherProps}) =>{\n    const customButton = getButton(buttonType);\n    return(\n        <customButton {...otherProps}>{children}</customButton>\n    )\n};\n\nexport default Button;\n\n"],"mappings":";AAAA,SAAQA,UAAR,EAAoBC,kBAApB,EAAwCC,cAAxC,QAA6D,iBAA7D;;AAEA,OAAO,MAAMC,mBAAmB,GAAG;EAC/BC,IAAI,EAAE,MADyB;EAE/BC,MAAM,EAAE,gBAFuB;EAG/BC,QAAQ,EAAC;AAHsB,CAA5B;;AAMP,MAAMC,SAAS,GAAG;EAAA,IAACC,UAAD,uEAAcL,mBAAmB,CAACC,IAAlC;EAAA,OACd;IACI,CAACD,mBAAmB,CAACC,IAArB,GAA2BJ,UAD/B;IAEI,CAACG,mBAAmB,CAACE,MAArB,GAA6BJ,kBAFjC;IAGI,CAACE,mBAAmB,CAACG,QAArB,GAA+BJ;EAHnC,EAIEM,UAJF,CADc;AAAA,CAAlB;;AAQA,MAAMC,MAAM,GAAG,QAA0C;EAAA,IAAzC;IAACC,QAAD;IAAWF,UAAX;IAAuB,GAAGG;EAA1B,CAAyC;EACrD,MAAMC,YAAY,GAAGL,SAAS,CAACC,UAAD,CAA9B;EACA,oBACI,6BAAkBG,UAAlB;IAAA,UAA+BD;EAA/B;IAAA;IAAA;IAAA;EAAA,QADJ;AAGH,CALD;;KAAMD,M;AAON,eAAeA,MAAf"},"metadata":{},"sourceType":"module"}