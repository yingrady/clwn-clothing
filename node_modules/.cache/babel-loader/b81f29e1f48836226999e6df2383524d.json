{"ast":null,"code":"import { compose, applyMiddleware } from 'redux';\nimport { persistStore, persistReducer } from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\nimport { configureStore } from \"@reduxjs/toolkit\"; // import logger from 'redux-logger';\n\nimport { rootReducer } from './root-reducer';\n\nconst loggerMiddleware = store => next => action => {\n  if (!action.type) {\n    return next(action);\n  }\n\n  console.log('type: ', action.type);\n  console.log('payload: ', action.payload);\n  console.log('currentState: ', store.getState());\n  next(action);\n  console.log('next state: ', store.getState());\n};\n\nconst persistConfig = {\n  key: 'root',\n  storage,\n  blacklist: ['user']\n};\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\nconst middleWares = [loggerMiddleware];\nconst composedEnhancers = compose(applyMiddleware(...middleWares));\nexport const store = configureStore({\n  reducer: persistedReducer,\n  undefined,\n  composedEnhancers\n});","map":{"version":3,"names":["compose","applyMiddleware","persistStore","persistReducer","storage","configureStore","rootReducer","loggerMiddleware","store","next","action","type","console","log","payload","getState","persistConfig","key","blacklist","persistedReducer","middleWares","composedEnhancers","reducer","undefined"],"sources":["/Users/priscilla/ReactProject/react-udemy/crwn-clothing/clwn-clothing/src/store/store.js"],"sourcesContent":["import { compose, applyMiddleware } from 'redux';\nimport {persistStore, persistReducer} from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\n\nimport {configureStore} from \"@reduxjs/toolkit\";\n\n// import logger from 'redux-logger';\n\nimport { rootReducer } from './root-reducer';\n\nconst loggerMiddleware = (store) => (next) => (action) => {\n  if (!action.type) {\n    return next(action);\n  }\n\n  console.log('type: ', action.type);\n  console.log('payload: ', action.payload);\n  console.log('currentState: ', store.getState());\n\n  next(action);\n\n  console.log('next state: ', store.getState());\n};\n\nconst persistConfig = {\n  key: 'root',\n  storage,\n  blacklist: ['user'],\n};\n\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\n\n\nconst middleWares = [loggerMiddleware];\n\n\nconst composedEnhancers = compose(applyMiddleware(...middleWares));\n\nexport const store = configureStore({reducer:persistedReducer, undefined, composedEnhancers});"],"mappings":"AAAA,SAASA,OAAT,EAAkBC,eAAlB,QAAyC,OAAzC;AACA,SAAQC,YAAR,EAAsBC,cAAtB,QAA2C,eAA3C;AACA,OAAOC,OAAP,MAAoB,2BAApB;AAEA,SAAQC,cAAR,QAA6B,kBAA7B,C,CAEA;;AAEA,SAASC,WAAT,QAA4B,gBAA5B;;AAEA,MAAMC,gBAAgB,GAAIC,KAAD,IAAYC,IAAD,IAAWC,MAAD,IAAY;EACxD,IAAI,CAACA,MAAM,CAACC,IAAZ,EAAkB;IAChB,OAAOF,IAAI,CAACC,MAAD,CAAX;EACD;;EAEDE,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBH,MAAM,CAACC,IAA7B;EACAC,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAyBH,MAAM,CAACI,OAAhC;EACAF,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA8BL,KAAK,CAACO,QAAN,EAA9B;EAEAN,IAAI,CAACC,MAAD,CAAJ;EAEAE,OAAO,CAACC,GAAR,CAAY,cAAZ,EAA4BL,KAAK,CAACO,QAAN,EAA5B;AACD,CAZD;;AAcA,MAAMC,aAAa,GAAG;EACpBC,GAAG,EAAE,MADe;EAEpBb,OAFoB;EAGpBc,SAAS,EAAE,CAAC,MAAD;AAHS,CAAtB;AAMA,MAAMC,gBAAgB,GAAGhB,cAAc,CAACa,aAAD,EAAgBV,WAAhB,CAAvC;AAGA,MAAMc,WAAW,GAAG,CAACb,gBAAD,CAApB;AAGA,MAAMc,iBAAiB,GAAGrB,OAAO,CAACC,eAAe,CAAC,GAAGmB,WAAJ,CAAhB,CAAjC;AAEA,OAAO,MAAMZ,KAAK,GAAGH,cAAc,CAAC;EAACiB,OAAO,EAACH,gBAAT;EAA2BI,SAA3B;EAAsCF;AAAtC,CAAD,CAA5B"},"metadata":{},"sourceType":"module"}